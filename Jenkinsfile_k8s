pipeline {
    agent { label 'jnlp-linux-arm64' }
    options {
        buildDiscarder(logRotator(daysToKeepStr: '15'))
    }
    stages {
        stage('Checkout') {
            steps {
                checkout scm
                script {
                    // Identify the target to build depending on the requirement of the modified files (empty if none)
                    def target = sh(script: 'bin/select-target-from-modified-files.sh', returnStdout: true).trim()

                    if (target) {
                        echo "= Building ${target} target"
                        buildDockerAndPublishImage('jenkins-weekly', [
                            automaticSemanticVersioning: true,
                            gitCredentials: 'github-app-infra',
                            targetplatforms: 'linux/amd64,linux/arm64',
                            nextVersionCommand: 'echo "$(jx-release-version -next-version=semantic:strip-prerelease)-$(grep "FROM jenkins" Dockerfile | cut -d: -f2 | cut -d- -f1)"',
                            dockerBakeFile: 'docker-bake.hcl',
                            dockerBakeTarget: target,
                        ])
                    } else {
                        echo 'INFO: none of the modified file(s) required a build.'
                    }
                }
            }
        }
    }
}
